print(g)
if (range(df1[g,])[1]!=range(df1[g,])[2] || range(df2[g,])[1]!=range(df2[g,])[2] )    {
r <- t.test(df1[g,],df2[g,])
if(r$p.value <= threshold){
returngenes <- c(returngenes,g)
plist <- c(plist,r$p.value)
#print(r)
}
}
}
r <- t.test(df1["A2M",],df2["A2M",])
r
FeaturePlot(d1,"A1BG")
FeaturePlot(d2,"A1BG")
FeaturePlot(d1,"A1BG")
FeaturePlot(d1,"A2M")
FeaturePlot(d2,"A2M")
do.call(rbind, Map(data.frame, A=returngenes, B=plist))
dfr <- do.call(rbind, Map(data.frame, A=returngenes, B=plist))
View(dfr)
dfr <- do.call(rbind, Map(data.frame, Gene=returngenes, p.value=plist))
View(dfr)
FeaturePlot(d2,"LUM")
FeaturePlot(d1,"LUM")
FeaturePlot(d2,"LUM")
DimPlot(GFP)
DimPlot(OLD)
MakeConfusionMatrix(GFP,OLD)
c1<- 13
c2<- 1
library(Seurat)
d1 <- subset(so1,idents = c1)
d2 <- subset(so2,idents = c2)
df1 <- d1@assays$RNA@scale.data
df2 <- d2@assays$RNA@scale.data
df1 <- df1[order(row.names(df1)),]
df2 <- df2[order(row.names(df2)),]
genes1 <- rownames(df1)
genes2 <- rownames(df2)
ana_gene <- intersect(genes1,genes2)
returngenes <- c()
plist<-c()
i<- 1
threshold <-0.05/(length(ana_gene)*2)
for (g in ana_gene) {
print(g)
if (range(df1[g,])[1]!=range(df1[g,])[2] || range(df2[g,])[1]!=range(df2[g,])[2] )    {
r <- t.test(df1[g,],df2[g,])
if(r$p.value <= threshold){
returngenes <- c(returngenes,g)
plist <- c(plist,r$p.value)
#print(r)
}
}
}
dfr <- do.call(rbind, Map(data.frame, Gene=returngenes, p.value=plist))
View(dfr)
FeaturePlot(df1,"TNNT2")
FeaturePlot(d1,"TNNT2")
FeaturePlot(d2,"TNNT2")
FeaturePlot(d1,"TNNT2")
FeaturePlot(d2,"TNNT2")
DimPlot(OLD,label = T)
FeaturePlot(d2,"TNNT2")
DimPlot(GFP,label = T)
FeaturePlot(d1,"TNNT2")
FeaturePlot(d2,"TNNT2")
FeaturePlot(d2,"ACTC1")
FeaturePlot(d1,"ACTC1")
document()
setwd("C:/Users/Aaron/Desktop/Rpackage/CSO")
document()
##############################################################################
table(Idents(old_anotated),old_anotated$orig.ident)
document()
install("CSO")
setwd("C:/Users/Aaron/Desktop/Rpackage")
install("CSO")
library("CSO")
DimPlot(OLD,label = T)
setwd("C:/Users/Aaron/Desktop/Rpackage/CSO")
document()
DimPlot(OLD,label = T)
DimPlot(GFP,label = T)
t <- CheckCellCoverage(OLD,GFP)
r <- MakeConfusionMatrix(GFP,OLD)
df <- ClusterDifference(GFP,8,OLD,8)
View(df)
FeaturePlot(GFP,"CADM1")
FeaturePlot(OLD,"CADM1")
FeaturePlot(GFP,"CADM1")
FeaturePlot(OLD,"CADM1")
OLD <- readRDS("../THESIS/updated_data/ABCD_old.Robj")
setwd("..")
library("devtools")
install("CSO")
library("Seurat")
library("CSO")
setwd("C:/Users/Aaron/Desktop/Rpackage/CSO")
document()
setwd("C:/Users/Aaron/Desktop/Rpackage")
OLD <- readRDS("../THESIS/updated_data/ABCD_old.Robj")
GFP <- readRDS("../THESIS/updated_data/abcd_with_gfp.Robj")
##############################################################################
table(Idents(old_anotated),old_anotated$orig.ident)
table(Idents(GFP_anotated),GFP_anotated$orig.ident)
DimPlot(OLD,label = T)
DimPlot(GFP,label = T)
t <- CheckCellCoverage(OLD,GFP)
r <- MakeConfusionMatrix(GFP,OLD)
df <- ClusterDifference(GFP,3,OLD,4)
View(df)
DimPlot(GFP,label = T)
DimPlot(OLD,label = T)
FeaturePlot(GFP,"LUM")
FeaturePlot(OLD,"LUM")
DimPlot(OLD,label = T)
FeaturePlot(GFP,"LUM")
r <- MakeConfusionMatrix(GFP,OLD)
library("devtools")
install("CSO")
document()
setwd("C:/Users/Aaron/Desktop/Rpackage")
library("CSO")
OLD <- readRDS("../THESIS/updated_data/ABCD_old.Robj")
GFP <- readRDS("../THESIS/updated_data/abcd_with_gfp.Robj")
r <- MakeConfusionMatrix(GFP,OLD)
r <- MakeConfusionMatrix(GFP,OLD)
document()
library("CSO")
library("devtools")
document()
document()
library("devtools")
install("CSO")
setwd("..")
library("devtools")
install("CSO")
library("Seurat")
library("CSO")
document("./CSO")
jane <- readRDS("../THESIS/analysis_jane/RemapedAggregate_clustered.Robj")
A <- readRDS("../THESIS/updated_data/A_GFP_anotated_j.Robj")
df <- ClusterDifference(jane,12,A,11)
View(df)
so1 <- jane
so2 <- A
c1 <- 12
c2 <- 11
c1 <- 2
d1 <- subset(so1,idents = c1)
d2 <- subset(so2,idents = c2)
df1 <- d1@assays$RNA@scale.data
df2 <- d2@assays$RNA@scale.data
df1 <- df1[order(row.names(df1)),]
df2 <- df2[order(row.names(df2)),]
genes1 <- rownames(df1)
print("sample 1 has")
cat(length(genes1))
print("genes")
genes2 <- rownames(df2)
print("sample 2 has")
cat(length(genes2))
print("genes")
ana_gene <- intersect(genes1,genes2)
print("only analyze:")
print(length(ana_gene))
print(" numbers of genes")
returngenes <- c()
plist<-c()
i<- 1
threshold <-0.05/(length(ana_gene)*2)
for (g in ana_gene) {
if (range(df1[g,])[1]!=range(df1[g,])[2] || range(df2[g,])[1]!=range(df2[g,])[2] )    {
r <- t.test(df1[g,],df2[g,])
if(r$p.value <= threshold){
returngenes <- c(returngenes,g)
plist <- c(plist,r$p.value)
print(r)
}
}
}
VlnPlot(A,"PLA2G7")
VlnPlot(jane,"PLA2G7")
VlnPlot(jane,"LYZ")
VlnPlot(A,"LYZ")
d1@assays$RNA
d1@assays$RNA@data
d1@assays$RNA@scale.data
d1
d1$nFeature_RNA
d1$nCount_RNA
d1@assays
d1@assays$RNA
GetAssayData(d1)
GetAssayData(d1,slot = "data")
GetAssayData(d1,"data")
d1 <- subset(so1,idents = c1)
d2 <- subset(so2,idents = c2)
df1 <- GetAssayData(d1,"data")
df2 <- GetAssayData(d2,"data")
df1 <- df1[order(row.names(df1)),]
df2 <- df2[order(row.names(df2)),]
genes1 <- rownames(df1)
print("sample 1 has")
cat(length(genes1))
print("genes")
genes2 <- rownames(df2)
print("sample 2 has")
cat(length(genes2))
print("genes")
ana_gene <- intersect(genes1,genes2)
print("only analyze:")
print(length(ana_gene))
df1
View(df1)
print(" numbers of genes")
returngenes <- c()
plist<-c()
i<- 1
threshold <-0.05/(length(ana_gene)*2)
for (g in ana_gene) {
if (range(df1[g,])[1]!=range(df1[g,])[2] || range(df2[g,])[1]!=range(df2[g,])[2] )    {
r <- t.test(df1[g,],df2[g,])
if(r$p.value <= threshold){
returngenes <- c(returngenes,g)
plist <- c(plist,r$p.value)
print(r)
}
}
}
dfr <- do.call(rbind, Map(data.frame, Gene=returngenes, p.value=plist))
View(dfr)
VlnPlot(jane,"RAB27B")
VlnPlot(A,"RAB27B")
FeaturePlot(jane,"RAB27B")
FeaturePlot(A,"RAB27B")
FeaturePlot(jane,"RAB27B")
old_anotate <- readRDS("../THESIS/updated_data/abcd_anotate.Robj")
setwd("..")
library("devtools")
install("CSO")
library("Seurat")
library("CSO")
document("./CSO")
old_anotate <- readRDS("../THESIS/updated_data/abcd_anotate.Robj")
table(old_anotated$orig.ident)
old_anotated <- readRDS("../THESIS/updated_data/abcd_anotate.Robj")
rm(old_anotated)
rm(old_anotate)
old_anotated <- readRDS("../THESIS/updated_data/abcd_anotate.Robj")
table(old_anotated$orig.ident)
GFP <- readRDS("../THESIS/updated_data/abcd_with_gfp.Robj")
table(GFP$orig.ident)
jane <- readRDS("../THESIS/analysis_jane/RemapedAggregate_clustered.Robj")
setwd("..")
library("devtools")
install("CSO")
library("Seurat")
library("CSO")
document("./CSO")
jane <- readRDS("../THESIS/analysis_jane/RemapedAggregate_clustered.Robj")
table(jane$GroupID)
setwd("..")
library("devtools")
install("CSO")
setwd("./Compare-Seurat-Object/")
library("devtools")
install("CSO")
library("Seurat")
library("CSO")
source('C:/Users/Aaron/Desktop/Rpackage/use.R', echo=TRUE)
document("")
document()
table(old_anotated$orig.ident)
old_anotated <- readRDS("../THESIS/updated_data/abcd_anotate.Robj")
old_anotated <- readRDS("../../THESIS/updated_data/abcd_anotate.Robj")
old_markers <- FindAllMarkers(old_anotated)
GFP <- readRDS("../../THESIS/updated_data/abcd_with_gfp.Robj")
gfp_marker <- FindAllMarkers(GFP)
View(old_markers)
FeaturePlot(old_anotated,c("IGFBP5"))
FeaturePlot(old_anotated,c("HBG2"))
FeaturePlot(old_anotated,c("PPBP"))
FeaturePlot(old_anotated,c("MALAT1"))
FeaturePlot(old_anotated,c("NEAT"))
FeaturePlot(old_anotated,c("NEAT1"))
FeaturePlot(old_anotated,c("DNM3OS"))
FeaturePlot(old_anotated,c("LUM"))
FeaturePlot(old_anotated,c("DNM3OS","TTN"))
FeaturePlot(old_anotated,c("DNM3OS","ILS1",""))
FeaturePlot(old_anotated,c("DNM3OS","ISL1"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","APTSE"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATPSE"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGGBI"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGGB1"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGGBI"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBI"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","SDC2"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","COL11A1"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBi"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBI"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBI","TOP2A"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBI","TOP2A","MTURN","PF4"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBI","TOP2A","MTURN","PF4","SBP1"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBI","TOP2A","MTURN","PF4","SPP1"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBI","TOP2A","MTURN","CD74"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBI","TOP2A","MTURN","PF4","CD74",))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBI","TOP2A","MTURN","PF4","CD74"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBI","TOP2A","MTURN","CD74","KDR"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBI","TOP2A","MTURN","PF4","CD74","KDR"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBI","TOP2A","MTURN","PF4","CD74","KDR","S100AB"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBI","TOP2A","MTURN","PF4","CD74","KDR","S100A8","HBZ","NCAPH","CLC","ERBB4","AC018635.2","MYBPC3"))
FeaturePlot(old_anotated,c("MT-CO1"))
FeaturePlot(old_anotated,c("MT-CO1","MT-CO3"))
FeaturePlot(old_anotated,c("MT-CO1","MT-CO3","MT-ATP6","MT-ND2"))
FeaturePlot(old_anotated,c("DNM3OS","TTN","VCAN","ATP5E","TGFBI","TOP2A","MTURN","PF4","CD74","KDR","S100A8","HBZ","NCAPH","CLC","ERBB4","AC018635.2","MYBPC3"))
FeaturePlot(old_anotated,c("MYL7"))
FeaturePlot(old_anotated,c("AC018635.2"))
B <- readRDS("./original_data/GFP/SHEAR_DMSO.Robj")
C <- readRDS("./original_data/GFP/STATIC_SBCHIR.Robj")
D <- readRDS("./original_data/GFP/SHEAR_SBCHIR.Robj")
setwd("../../THESIS/")
B <- readRDS("./original_data/GFP/SHEAR_DMSO.Robj")
C <- readRDS("./original_data/GFP/STATIC_SBCHIR.Robj")
D <- readRDS("./original_data/GFP/SHEAR_SBCHIR.Robj")
DimPlot(B,label = TRUE)
C<-NormalizeData(C,normalization.method = "LogNormalize",scale.factor = 10000)
C <- FindVariableFeatures(C, selection.method = "vst",nfeatures = 2000)
all.genes <- rownames(C)
C <- ScaleData(C,features = all.genes)
C <- RunPCA(C, features = VariableFeatures(object = C))
ElbowPlot(C,ndims = 50) # suggest maybe 12
View(gfp_marker)
FeaturePlot(GFP,c("PLEK"))
FeaturePlot(GFP,c("PF4"),)
FeaturePlot(GFP,c("PF4","IGFBP5"))
FeaturePlot(GFP,c("PF4","LUM"))
FeaturePlot(GFP,c("PF4","IGFBP5"))
FeaturePlot(GFP,c("PF4","MEST"))
FeaturePlot(GFP,c("PF4","IGFBP3"))
FeaturePlot(GFP,c("PF4","MGP","c7"))
FeaturePlot(GFP,c("PF4","MGP","C7"))
FeaturePlot(GFP,c("PF4","MGP","VCAN"))
FeaturePlot(GFP,c("PF4","LUM","c7"))
FeaturePlot(GFP,c("PF4","LUM","C7"))
FeaturePlot(GFP,c("PF4","LUM","C7","CRABP1"))
FeaturePlot(GFP,"SLC26A7")
FeaturePlot(GFP,"EFNB2")
FeaturePlot(GFP,"INHBA")
FeaturePlot(GFP,"COL8A1")
FeaturePlot(GFP,"HIST1H2AC")
FeaturePlot(GFP,"RP11-367G6.3")
FeaturePlot(GFP,"SDC2")
FeaturePlot(GFP,"MYB")
FeaturePlot(GFP,"KIAA0101")
FeaturePlot(GFP,"SPN")
FeaturePlot(GFP,"PTPN7")
FeaturePlot(GFP,"C1QB")
FeaturePlot(GFP,"NUSAP1")
FeaturePlot(GFP,"ASPM")
FeaturePlot(GFP,"ASPM",label = T)
9v11 <- FindMarkers(GFP,ident.1 = "9",ident.2 = "11")
v9v11 <- FindMarkers(GFP,ident.1 = "9",ident.2 = "11")
View(v9v11)
FeaturePlot(GFP,"FN1",label = T)
FeaturePlot(GFP,"CGNL1",label = T)
FeaturePlot(GFP,"RGS5",label = T)
FeaturePlot(GFP,"IGI",label = T)
FeaturePlot(GFP,"IGJ",label = T)
FeaturePlot(GFP,"HLA-DRA
",label = T)
FeaturePlot(GFP,"HLA-DRA",label = T)
FeaturePlot(GFP,"PRTN3",label = T)
FeaturePlot(GFP,"RNASE2",label = T)
FeaturePlot(GFP,"NGFRAP1",label = T)
FeaturePlot(GFP,"ATP5E",label = T)
B<-NormalizeData(B,normalization.method = "LogNormalize",scale.factor = 10000)
B <- FindVariableFeatures(B, selection.method = "vst",nfeatures = 2000)
all.genes <- rownames(B)
B <- ScaleData(B,features = all.genes)
B <- RunPCA(B, features = VariableFeatures(object = B))
ElbowPlot(B,ndims = 50) # suggest maybe 11
# B <- JackStraw(B, num.replicate = 100)
# B <- ScoreJackStraw(B,dims = 1:13)
# JackStrawPlot(B,dims = 1:13)
B <- FindNeighbors(B,dims = 1:11)
B <- FindClusters(B,resolution = 0.7)
# B <- RunTSNE(B,dims = 1:10)
B <- RunUMAP(B,dims = 1:11)
DimPlot(B,label = TRUE)
C<-NormalizeData(C,normalization.method = "LogNormalize",scale.factor = 10000)
C <- FindVariableFeatures(C, selection.method = "vst",nfeatures = 2000)
all.genes <- rownames(C)
C <- ScaleData(C,features = all.genes)
C <- RunPCA(C, features = VariableFeatures(object = C))
ElbowPlot(C,ndims = 50) # suggest maybe 12
# C <- JackStraw(C, num.replicate = 100)
# C <- ScoreJackStraw(C,dims = 1:13)
# JackStrawPlot(C,dims = 1:13)
C <- FindNeighbors(C,dims = 1:12)
C <- FindClusters(C,resolution = 0.7)
# C <- RunTSNE(C,dims = 1:10)
C <- RunUMAP(C,dims = 1:12)
DimPlot(C,label = TRUE)
D<-NormalizeData(D,normalization.method = "LogNormalize",scale.factor = 10000)
D <- FindVariableFeatures(D, selection.method = "vst",nfeatures = 2000)
all.genes <- rownames(D)
D <- ScaleData(D,features = all.genes)
D <- RunPCA(D, features = VariableFeatures(object = D))
ElbowPlot(D,ndims = 50) # suggest maybe 13
# D <- JackStraw(D, num.replicate = 100)
# D <- ScoreJackStraw(D,dims = 1:13)
# JackStrawPlot(D,dims = 1:13)
D <- FindNeighbors(D,dims = 1:12)
D <- FindClusters(D,resolution = 0.7)
# D <- RunTSNE(D,dims = 1:10)
D <- RunUMAP(D,dims = 1:12)
DimPlot(D,label = TRUE)
B <- RenameCells(B,add.cell.id = "C3")
DimPlot(B,label = TRUE)
jane <- readRDS("../THESIS/analysis_jane/RemapedAggregate_clustered.Robj")
CheckCellCoverage(B,jane)
t <- CheckCellCoverage()
t <- CheckCellCoverage(B,Jane)
t <- CheckCellCoverage(B,jane)
C <- RenameCells(C,add.cell.id = "C2")
D <- RenameCells(D,add.cell.id = "C4")
C <- RenameCells(C,add.cell.id = "C2")
saveRDS(B,"./updated_data/B_GFP.Robj")
saveRDS(C,"./updated_data/C_GFP.Robj")
saveRDS(D,"./updated_data/D_GFP.Robj")
MakeConfusionMatrix(B,jane)
MakeConfusionMatrix(jane,B)
MakeConfusionMatrix(B,jane)
MakeConfusionMatrix(C,jane)
MakeConfusionMatrix(D,jane)
c
C
C$orig.ident
C <- readRDS("./original_data/GFP/STATIC_SBCHIR.Robj")
C$orig.ident
C <- RenameCells(C,add.cell.id = "C2")
C<-NormalizeData(C,normalization.method = "LogNormalize",scale.factor = 10000)
C <- FindVariableFeatures(C, selection.method = "vst",nfeatures = 2000)
all.genes <- rownames(C)
C <- ScaleData(C,features = all.genes)
C <- RunPCA(C, features = VariableFeatures(object = C))
ElbowPlot(C,ndims = 50) # suggest maybe 12
# C <- JackStraw(C, num.replicate = 100)
# C <- ScoreJackStraw(C,dims = 1:13)
# JackStrawPlot(C,dims = 1:13)
C <- FindNeighbors(C,dims = 1:12)
C <- FindClusters(C,resolution = 0.7)
# C <- RunTSNE(C,dims = 1:10)
C <- RunUMAP(C,dims = 1:12)
DimPlot(C,label = TRUE)
saveRDS(C,"./updated_data/C_GFP.Robj")
MakeConfusionMatrix(C,jane)
MakeConfusionMatrix(A,jane)
A <- readRDS("./updated_data/A_GFP_j.Robj")
MakeConfusionMatrix(A,jane)
DimPlot(B,label = TRUE)
DimPlot(C,label = TRUE)
DimPlot(D,label = TRUE)
ElbowPlot(D,ndims = 50) # suggest maybe 13
# D <- JackStraw(D, num.replicate = 100)
# D <- ScoreJackStraw(D,dims = 1:13)
# JackStrawPlot(D,dims = 1:13)
D <- FindNeighbors(D,dims = 1:13)
D <- FindClusters(D,resolution = 0.7)
# D <- RunTSNE(D,dims = 1:10)
D <- RunUMAP(D,dims = 1:13)
DimPlot(D,label = TRUE)
# D <- JackStraw(D, num.replicate = 100)
# D <- ScoreJackStraw(D,dims = 1:13)
# JackStrawPlot(D,dims = 1:13)
D <- FindNeighbors(D,dims = 1:12)
D <- FindClusters(D,resolution = 0.7)
# D <- RunTSNE(D,dims = 1:10)
D <- RunUMAP(D,dims = 1:12)
DimPlot(D,label = TRUE)
saveRDS(D,"./updated_data/D_GFP.Robj")
DimPlot(A,label = TRUE)
DimPlot(A,label = TRUE,label.size = 10)
DimPlot(A,label = TRUE,label.size = 8)
DimPlot(A,label = TRUE,label.size = 8)
DimPlot(B,label = TRUE,label.size = 8)
DimPlot(C,label = TRUE,label.size = 8)
DimPlot(D,label = TRUE,label.size = 8)
library("devtools")
install("CSO")
library("Seurat")
document()
jane <- readRDS("../THESIS/analysis_jane/RemapedAggregate_clustered.Robj")
jane <- readRDS("../../THESIS/analysis_jane/RemapedAggregate_clustered.Robj")
A <- readRDS("../THESIS/updated_data/A_GFP_anotated_j.Robj")
A <- readRDS("../../THESIS/updated_data/A_GFP_anotated_j.Robj")
ClusterDifference(A,11,jane,2)
gene<-ClusterDifference(A,'11',jane,'2')
View(gene)
old_anotated <- readRDS("../../THESIS/updated_data/abcd_anotate.Robj")
##############################################################################
table(Idents(old_anotated),old_anotated$orig.ident)
GFP_anotated  <- readRDS("../../THESIS/updated_data/A_GFP_anotated_j.Robj")
table(Idents(GFP_anotated),GFP_anotated$orig.ident)
table(Idents(GFP_anotated),GFP_anotated$GroupID)
GFP_anotated  <- readRDS("../../THESIS/updated_data/abcd_with_gfp_anotated.Robj")
DimPlot(GFP_anotated)
table(Idents(GFP_anotated),GFP_anotated$GroupID)
table(Idents(GFP_anotated),GFP_anotated$orig.ident)
